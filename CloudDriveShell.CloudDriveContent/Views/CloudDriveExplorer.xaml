<UserControl x:Class="CloudDriveShell.CloudDriveContent.Views.CloudDriveExplorer"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:converters="clr-namespace:CloudDriveShell.Infrastructure.Converters;assembly=CloudDriveShell.Infrastructure"
             xmlns:utils="clr-namespace:CloudDriveShell.Infrastructure.Utils;assembly=CloudDriveShell.Infrastructure"
             mc:Ignorable="d" d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Resources/AutoScrollListBoxDictionary.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/CloudDriveShell.Infrastructure;component/Theme/General.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <converters:FileToIconConverter x:Key="FileToIconConverter" />
            <converters:FileSizeHumanConverter x:Key="FileSizeHumanConverter" />
            <converters:ListViewStarWidthConverter x:Key="ListViewStarWidthConverter"/>
            <converters:NavigatePathNameConverter x:Key="NavigatePathNameConverter" />
            <converters:NavigateShortPathNameConverter x:Key="NavigateShortPathNameConverter" />
            <converters:BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter" />
            <converters:InvertBooleanToVisibilityConverter x:Key="InvertBooleanToVisibilityConverter" />
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="40"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="30"></RowDefinition>
        </Grid.RowDefinitions>
        <DockPanel>
            <Button DockPanel.Dock="Right" HorizontalAlignment="Right" Margin="0,3,10,3" Height="30" IsDefault="True" Width="40" ToolTip="传输列表" Style="{DynamicResource WhiteGrayContentButtonStyle}" Command="{Binding TransferListViewCommand}" FontSize="15">
                <Button.Content>
                    <Image Source="../Resources/transfer.png" Width="18" Height="26"></Image>
                </Button.Content>
            </Button>
            <Button DockPanel.Dock="Right" HorizontalAlignment="Right" Margin="0,3,10,3" Height="30" IsDefault="True" Width="40" ToolTip="删除选定" Style="{DynamicResource WhiteGrayContentButtonStyle}" Command="{Binding DeleteSelectedCommand}" FontSize="15">
                <Button.Content>
                    <Image Source="../Resources/delete.png" Width="18" Height="26"></Image>
                </Button.Content>
            </Button>
            <Button DockPanel.Dock="Right" HorizontalAlignment="Right" Margin="0,3,10,3" Height="30" IsDefault="True" Width="40" ToolTip="下载选定" Style="{DynamicResource WhiteGrayContentButtonStyle}" Command="{Binding DownloadSelectedCommand}" FontSize="15">
                <Button.Content>
                    <Image Source="../Resources/download.png" Width="18" Height="26"></Image>
                </Button.Content>
            </Button>
            <Button DockPanel.Dock="Right" HorizontalAlignment="Right" Margin="0,3,10,3" Height="30" IsDefault="True" Width="40" ToolTip="上传选定" Style="{DynamicResource WhiteGrayContentButtonStyle}" Command="{Binding UploadSelectedCommand}" FontSize="15">
                <Button.Content>
                    <Image Source="../Resources/upload.png" Width="18" Height="26"></Image>
                </Button.Content>
            </Button>
            <StackPanel DockPanel.Dock="Left" HorizontalAlignment="Left" Orientation="Horizontal" VerticalAlignment="Center">
                <TextBlock>
                <Hyperlink Command="{Binding ResouceHomeCommand}" TextDecorations="{x:Null}">
                      <Image Source="../Resources/home.png" Width="28" Height="28" Margin="10,0,5,5" Cursor="Hand" ToolTip="根目录"/>
                </Hyperlink>
                </TextBlock>
                <ListBox Margin="0" HorizontalContentAlignment="Stretch" ItemsSource="{Binding CurrentPathList}" 
                     Style="{StaticResource ListBoxWithAutoScroll_Horizontal}">
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="{x:Type ListBoxItem}">
                            <EventSetter Event="PreviewMouseLeftButtonDown" Handler="ListBox_MouseLeftButtonDown" />
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="true">
                                                <Setter Property="Background" TargetName="Bd" Value="#F1F1F1"/>
                                                <Setter Property="BorderBrush" TargetName="Bd" Value="#DCDCDC"/>
                                                <Setter Property="Foreground" Value="#000000"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListBox.ItemContainerStyle>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel HorizontalAlignment="Left" Orientation="Horizontal" VerticalAlignment="Center" Margin="2,0,2,0" Cursor="Hand">
                                <Image Source="../Resources/right.png" Width="12" Height="12"></Image>
                                <TextBlock FontSize="14" Text="{Binding Converter={StaticResource NavigateShortPathNameConverter}}" ToolTip="{Binding Converter={StaticResource NavigatePathNameConverter}}"/>
                            </StackPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </StackPanel>
        </DockPanel>
        <ListView Grid.Row="1" Focusable="False" SelectionMode="Single" ItemsSource="{Binding ResourceItems}" SelectedItem="{Binding CurrentSelectResourceItem, Mode=TwoWay}" 
                  IsSynchronizedWithCurrentItem="True" utils:GridViewSort.AutoSort="True" BorderThickness="0" FontSize="12" KeyDown="ListView_OnKeyDown" PreviewKeyDown="ListView_OnPreviewKeyDown"
                  Drop="ListView_OnDrop" AllowDrop="true">
            <ListView.Resources>
                <ContextMenu x:Key="ItemContextMenu">
                    <MenuItem Header="打开文件夹" Command="{Binding Path=DataContext.ResouceOpenCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}"/>
                    <MenuItem Header="新建文件夹" Command="{Binding Path=DataContext.ResourceCreateCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}"/>
                    <MenuItem Header="上传文件" Command="{Binding Path=DataContext.ResourceUploadCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}"/>
                    <MenuItem Header="下载文件" Command="{Binding Path=DataContext.DownloadSelectedCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}"/>
                    <Separator />
                    <MenuItem Header="刷新" Command="{Binding Path=DataContext.ResourceRefreshCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}"/>
                    <Separator />
                    <MenuItem Header="编辑" Command="{Binding Path=DataContext.ResourceEditCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}"/>
                    <Separator />
                    <MenuItem Header="复制" Command="{Binding Path=DataContext.ResourceCopyCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}"/>
                    <MenuItem Header="剪切" Command="{Binding Path=DataContext.ResourceCutCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}"/>
                    <MenuItem Header="粘贴" Command="{Binding Path=DataContext.ResourcePasteCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}"/>
                    <MenuItem Header="重命名" Command="{Binding Path=DataContext.ResourceRenameCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}"/>
                    <MenuItem Header="删除" Command="{Binding Path=DataContext.DeleteSelectedCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}"/>
                </ContextMenu>
                <Style TargetType="{x:Type ListView}">
                    <EventSetter Event="MouseDown" Handler="ListViewMouseDown_OnHandler" />
                    <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}" />
                </Style>
                <Style TargetType="{x:Type GridViewColumnHeader}">
                    <Setter Property="Height" Value="26"/>
                    <Setter Property="Padding" Value="5,0,0,0"/>
                    <Setter Property="HorizontalContentAlignment" Value="Left" />
                </Style>
            </ListView.Resources>
            <ListView.ItemContainerStyle>
                <Style TargetType="{x:Type ListViewItem}"  >
                    <EventSetter Event="PreviewMouseDown" Handler="ListViewItemPreviewMouseDown_OnHandler" />
                    <EventSetter Event="MouseDoubleClick" Handler="ListViewItemMouseDoubleClick_OnHandler" />
                    <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}" />
                    <Setter Property="Height" Value="24" />
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="Background" Value="#FFFFFF" />
                    <Setter Property="ToolTip" Value="{Binding}" />
                    <Setter Property="Foreground" Value="#000000"/>
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" Value="#000000" />
                            <Setter Property="Background" Value="#F1F1F1" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Foreground" Value="#000000" />
                            <Setter Property="Background" Value="#DCDCDC" />
                            <Setter Property="Opacity" Value="0.8" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=IsCopyOrCut}" Value="True">
                            <Setter Property="Foreground" Value="#434242" />
                            <Setter Property="FontStyle" Value="Italic" />
                            <Setter Property="FontWeight" Value="Bold" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=IsSelected}" Value="True">
                            <Setter Property="Foreground" Value="#000000" />
                            <Setter Property="Background" Value="#DCDCDC" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.View>
                <GridView>
                    <GridView.Columns>
                        <GridViewColumn Width="50">
                            <GridViewColumn.Header>
                                <CheckBox Margin="10,0,0,0" IsChecked="{Binding IsAllSelected}"/>
                            </GridViewColumn.Header>
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox Margin="10,0,0,0" IsChecked="{Binding Path=IsSelected,Mode=TwoWay}"/>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn utils:GridViewSort.PropertyName="ItemName"
                                    Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}, Converter={StaticResource ListViewStarWidthConverter}}">
                            <GridViewColumn.Header >
                                <TextBlock Margin="10,0,0,0" Text="名称"/>
                            </GridViewColumn.Header>
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <Grid HorizontalAlignment="Stretch">
                                        <StackPanel FlowDirection="LeftToRight" Orientation="Horizontal">
                                            <Image Margin="10,0,0,0" Width="18" Height="18">
                                                <Image.Source>
                                                    <MultiBinding Converter="{StaticResource FileToIconConverter}">
                                                        <Binding Path="ItemName"/>
                                                        <Binding Path="IsFolder"/>
                                                    </MultiBinding >
                                                </Image.Source>
                                            </Image>
                                            <Grid>
                                                <TextBlock Margin="10,0,0,0" Text="{Binding Path=ItemName,Mode=TwoWay}" Visibility="{Binding Path=IsEdit, Converter={StaticResource InvertBooleanToVisibilityConverter}}"/>
                                                <TextBox MaxLength="50" Margin="10,0,0,0" Text="{Binding Path=ItemName,Mode=TwoWay}" Visibility="{Binding Path=IsEdit, Converter={StaticResource BoolToVisibilityConverter}}" MinWidth="250" LostFocus="Txtbox_LostFocus" KeyDown="Txtbox_OnKeyDown">
                                                    <TextBox.Style>
                                                        <Style>
                                                            <Style.Triggers>
                                                                <MultiDataTrigger>
                                                                    <MultiDataTrigger.Conditions>
                                                                        <Condition Binding="{Binding Path=IsEdit}" Value="True" />
                                                                        <Condition Binding="{Binding RelativeSource={RelativeSource Self},Path=Visibility}" Value="Visible"/>
                                                                    </MultiDataTrigger.Conditions>
                                                                    <Setter Property="FocusManager.FocusedElement" Value="{Binding RelativeSource={RelativeSource Self}}"/>
                                                                </MultiDataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBox.Style>
                                                </TextBox>
                                            </Grid>
                                        </StackPanel>
                                        <Button Width="0" HorizontalAlignment="Right">
                                            <Button.Style>
                                                <Style TargetType="{x:Type Button}">
                                                    <Setter Property="Visibility" Value="Hidden" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ListBoxItem},Path=IsMouseOver}" Value="True">
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Button.Style>
                                        </Button>
                                    </Grid>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Width="150" utils:GridViewSort.PropertyName="ItemSize">
                            <GridViewColumn.Header>
                                <TextBlock Margin="10,0,0,0" Text="修改时间"/>
                            </GridViewColumn.Header>
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Margin="10,0,0,0" Text="{Binding Path=ModifyTime, StringFormat=yyyy-MM-dd HH:mm:ss}"></TextBlock>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Width="100" utils:GridViewSort.PropertyName="ItemSize">
                            <GridViewColumn.Header>
                                <TextBlock Margin="10,0,0,0" Text="大小"/>
                            </GridViewColumn.Header>
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Margin="10,0,0,0" Text="{Binding Path=ItemSize,Converter={StaticResource FileSizeHumanConverter}}"></TextBlock>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                    </GridView.Columns>
                </GridView>
            </ListView.View>
        </ListView>
        <TextBlock Grid.Row="2" VerticalAlignment="Center" Margin="20,0,0,0" FontSize="14" Foreground="Gray" Text="{Binding Path=MessageInfo}"></TextBlock>
        <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center">
            <TextBlock Margin="0,0,20,0" FontSize="14" Foreground="Gray" Text="{Binding Path=MessageExtensionInfo}" ToolTip="{Binding Path=MessageExtensionInfoTooltip}"></TextBlock>
            <ProgressBar Orientation="Horizontal" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" Maximum="100" VerticalAlignment="Top" Visibility="{Binding Path=HasRunningTransfers,Converter={StaticResource BoolToVisibilityConverter}}" Value="{Binding Path=TransfersProgress}" Width="80" Height="14" Margin="0,0,20,0" ToolTip="查看详情,请切换至传输列表"></ProgressBar>
        </StackPanel>
    </Grid>
</UserControl>
